// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EpicChainAPI.v2.Object {

  /// <summary>Holder for reflection information generated from object/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for object/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRvYmplY3Qvc2VydmljZS5wcm90bxIQbmVvLmZzLnYyLm9iamVjdBoSb2Jq",
            "ZWN0L3R5cGVzLnByb3RvGhByZWZzL3R5cGVzLnByb3RvGhNzZXNzaW9uL3R5",
            "cGVzLnByb3RvIvwBCgpHZXRSZXF1ZXN0Ei8KBGJvZHkYASABKAsyIS5uZW8u",
            "ZnMudjIub2JqZWN0LkdldFJlcXVlc3QuQm9keRI5CgttZXRhX2hlYWRlchgC",
            "IAEoCzIkLm5lby5mcy52Mi5zZXNzaW9uLlJlcXVlc3RNZXRhSGVhZGVyEkMK",
            "DXZlcmlmeV9oZWFkZXIYAyABKAsyLC5uZW8uZnMudjIuc2Vzc2lvbi5SZXF1",
            "ZXN0VmVyaWZpY2F0aW9uSGVhZGVyGj0KBEJvZHkSKAoHYWRkcmVzcxgBIAEo",
            "CzIXLm5lby5mcy52Mi5yZWZzLkFkZHJlc3MSCwoDcmF3GAIgASgIIuQDCgtH",
            "ZXRSZXNwb25zZRIwCgRib2R5GAEgASgLMiIubmVvLmZzLnYyLm9iamVjdC5H",
            "ZXRSZXNwb25zZS5Cb2R5EjoKC21ldGFfaGVhZGVyGAIgASgLMiUubmVvLmZz",
            "LnYyLnNlc3Npb24uUmVzcG9uc2VNZXRhSGVhZGVyEkQKDXZlcmlmeV9oZWFk",
            "ZXIYAyABKAsyLS5uZW8uZnMudjIuc2Vzc2lvbi5SZXNwb25zZVZlcmlmaWNh",
            "dGlvbkhlYWRlchqgAgoEQm9keRI3CgRpbml0GAEgASgLMicubmVvLmZzLnYy",
            "Lm9iamVjdC5HZXRSZXNwb25zZS5Cb2R5LkluaXRIABIPCgVjaHVuaxgCIAEo",
            "DEgAEjEKCnNwbGl0X2luZm8YAyABKAsyGy5uZW8uZnMudjIub2JqZWN0LlNw",
            "bGl0SW5mb0gAGosBCgRJbml0EisKCW9iamVjdF9pZBgBIAEoCzIYLm5lby5m",
            "cy52Mi5yZWZzLk9iamVjdElEEiwKCXNpZ25hdHVyZRgCIAEoCzIZLm5lby5m",
            "cy52Mi5yZWZzLlNpZ25hdHVyZRIoCgZoZWFkZXIYAyABKAsyGC5uZW8uZnMu",
            "djIub2JqZWN0LkhlYWRlckINCgtvYmplY3RfcGFydCLDAwoKUHV0UmVxdWVz",
            "dBIvCgRib2R5GAEgASgLMiEubmVvLmZzLnYyLm9iamVjdC5QdXRSZXF1ZXN0",
            "LkJvZHkSOQoLbWV0YV9oZWFkZXIYAiABKAsyJC5uZW8uZnMudjIuc2Vzc2lv",
            "bi5SZXF1ZXN0TWV0YUhlYWRlchJDCg12ZXJpZnlfaGVhZGVyGAMgASgLMiwu",
            "bmVvLmZzLnYyLnNlc3Npb24uUmVxdWVzdFZlcmlmaWNhdGlvbkhlYWRlchqD",
            "AgoEQm9keRI2CgRpbml0GAEgASgLMiYubmVvLmZzLnYyLm9iamVjdC5QdXRS",
            "ZXF1ZXN0LkJvZHkuSW5pdEgAEg8KBWNodW5rGAIgASgMSAAaogEKBEluaXQS",
            "KwoJb2JqZWN0X2lkGAEgASgLMhgubmVvLmZzLnYyLnJlZnMuT2JqZWN0SUQS",
            "LAoJc2lnbmF0dXJlGAIgASgLMhkubmVvLmZzLnYyLnJlZnMuU2lnbmF0dXJl",
            "EigKBmhlYWRlchgDIAEoCzIYLm5lby5mcy52Mi5vYmplY3QuSGVhZGVyEhUK",
            "DWNvcGllc19udW1iZXIYBCABKA1CDQoLb2JqZWN0X3BhcnQi9gEKC1B1dFJl",
            "c3BvbnNlEjAKBGJvZHkYASABKAsyIi5uZW8uZnMudjIub2JqZWN0LlB1dFJl",
            "c3BvbnNlLkJvZHkSOgoLbWV0YV9oZWFkZXIYAiABKAsyJS5uZW8uZnMudjIu",
            "c2Vzc2lvbi5SZXNwb25zZU1ldGFIZWFkZXISRAoNdmVyaWZ5X2hlYWRlchgD",
            "IAEoCzItLm5lby5mcy52Mi5zZXNzaW9uLlJlc3BvbnNlVmVyaWZpY2F0aW9u",
            "SGVhZGVyGjMKBEJvZHkSKwoJb2JqZWN0X2lkGAEgASgLMhgubmVvLmZzLnYy",
            "LnJlZnMuT2JqZWN0SUQi9QEKDURlbGV0ZVJlcXVlc3QSMgoEYm9keRgBIAEo",
            "CzIkLm5lby5mcy52Mi5vYmplY3QuRGVsZXRlUmVxdWVzdC5Cb2R5EjkKC21l",
            "dGFfaGVhZGVyGAIgASgLMiQubmVvLmZzLnYyLnNlc3Npb24uUmVxdWVzdE1l",
            "dGFIZWFkZXISQwoNdmVyaWZ5X2hlYWRlchgDIAEoCzIsLm5lby5mcy52Mi5z",
            "ZXNzaW9uLlJlcXVlc3RWZXJpZmljYXRpb25IZWFkZXIaMAoEQm9keRIoCgdh",
            "ZGRyZXNzGAEgASgLMhcubmVvLmZzLnYyLnJlZnMuQWRkcmVzcyL7AQoORGVs",
            "ZXRlUmVzcG9uc2USMwoEYm9keRgBIAEoCzIlLm5lby5mcy52Mi5vYmplY3Qu",
            "RGVsZXRlUmVzcG9uc2UuQm9keRI6CgttZXRhX2hlYWRlchgCIAEoCzIlLm5l",
            "by5mcy52Mi5zZXNzaW9uLlJlc3BvbnNlTWV0YUhlYWRlchJECg12ZXJpZnlf",
            "aGVhZGVyGAMgASgLMi0ubmVvLmZzLnYyLnNlc3Npb24uUmVzcG9uc2VWZXJp",
            "ZmljYXRpb25IZWFkZXIaMgoEQm9keRIqCgl0b21ic3RvbmUYASABKAsyFy5u",
            "ZW8uZnMudjIucmVmcy5BZGRyZXNzIpECCgtIZWFkUmVxdWVzdBIwCgRib2R5",
            "GAEgASgLMiIubmVvLmZzLnYyLm9iamVjdC5IZWFkUmVxdWVzdC5Cb2R5EjkK",
            "C21ldGFfaGVhZGVyGAIgASgLMiQubmVvLmZzLnYyLnNlc3Npb24uUmVxdWVz",
            "dE1ldGFIZWFkZXISQwoNdmVyaWZ5X2hlYWRlchgDIAEoCzIsLm5lby5mcy52",
            "Mi5zZXNzaW9uLlJlcXVlc3RWZXJpZmljYXRpb25IZWFkZXIaUAoEQm9keRIo",
            "CgdhZGRyZXNzGAEgASgLMhcubmVvLmZzLnYyLnJlZnMuQWRkcmVzcxIRCglt",
            "YWluX29ubHkYAiABKAgSCwoDcmF3GAMgASgIIoABChNIZWFkZXJXaXRoU2ln",
            "bmF0dXJlEjAKBmhlYWRlchgBIAEoCzIYLm5lby5mcy52Mi5vYmplY3QuSGVh",
            "ZGVyUgZoZWFkZXISNwoJc2lnbmF0dXJlGAIgASgLMhkubmVvLmZzLnYyLnJl",
            "ZnMuU2lnbmF0dXJlUglzaWduYXR1cmUi9wIKDEhlYWRSZXNwb25zZRIxCgRi",
            "b2R5GAEgASgLMiMubmVvLmZzLnYyLm9iamVjdC5IZWFkUmVzcG9uc2UuQm9k",
            "eRI6CgttZXRhX2hlYWRlchgCIAEoCzIlLm5lby5mcy52Mi5zZXNzaW9uLlJl",
            "c3BvbnNlTWV0YUhlYWRlchJECg12ZXJpZnlfaGVhZGVyGAMgASgLMi0ubmVv",
            "LmZzLnYyLnNlc3Npb24uUmVzcG9uc2VWZXJpZmljYXRpb25IZWFkZXIasQEK",
            "BEJvZHkSNwoGaGVhZGVyGAEgASgLMiUubmVvLmZzLnYyLm9iamVjdC5IZWFk",
            "ZXJXaXRoU2lnbmF0dXJlSAASNQoMc2hvcnRfaGVhZGVyGAIgASgLMh0ubmVv",
            "LmZzLnYyLm9iamVjdC5TaG9ydEhlYWRlckgAEjEKCnNwbGl0X2luZm8YAyAB",
            "KAsyGy5uZW8uZnMudjIub2JqZWN0LlNwbGl0SW5mb0gAQgYKBGhlYWQivAMK",
            "DVNlYXJjaFJlcXVlc3QSMgoEYm9keRgBIAEoCzIkLm5lby5mcy52Mi5vYmpl",
            "Y3QuU2VhcmNoUmVxdWVzdC5Cb2R5EjkKC21ldGFfaGVhZGVyGAIgASgLMiQu",
            "bmVvLmZzLnYyLnNlc3Npb24uUmVxdWVzdE1ldGFIZWFkZXISQwoNdmVyaWZ5",
            "X2hlYWRlchgDIAEoCzIsLm5lby5mcy52Mi5zZXNzaW9uLlJlcXVlc3RWZXJp",
            "ZmljYXRpb25IZWFkZXIa9gEKBEJvZHkSMQoMY29udGFpbmVyX2lkGAEgASgL",
            "MhsubmVvLmZzLnYyLnJlZnMuQ29udGFpbmVySUQSDwoHdmVyc2lvbhgCIAEo",
            "DRI8CgdmaWx0ZXJzGAMgAygLMisubmVvLmZzLnYyLm9iamVjdC5TZWFyY2hS",
            "ZXF1ZXN0LkJvZHkuRmlsdGVyGmwKBkZpbHRlchI6CgptYXRjaF90eXBlGAEg",
            "ASgOMhsubmVvLmZzLnYyLm9iamVjdC5NYXRjaFR5cGVSCW1hdGNoVHlwZRIQ",
            "CgNrZXkYAiABKAlSA2tleRIUCgV2YWx1ZRgDIAEoCVIFdmFsdWUi+gEKDlNl",
            "YXJjaFJlc3BvbnNlEjMKBGJvZHkYASABKAsyJS5uZW8uZnMudjIub2JqZWN0",
            "LlNlYXJjaFJlc3BvbnNlLkJvZHkSOgoLbWV0YV9oZWFkZXIYAiABKAsyJS5u",
            "ZW8uZnMudjIuc2Vzc2lvbi5SZXNwb25zZU1ldGFIZWFkZXISRAoNdmVyaWZ5",
            "X2hlYWRlchgDIAEoCzItLm5lby5mcy52Mi5zZXNzaW9uLlJlc3BvbnNlVmVy",
            "aWZpY2F0aW9uSGVhZGVyGjEKBEJvZHkSKQoHaWRfbGlzdBgBIAMoCzIYLm5l",
            "by5mcy52Mi5yZWZzLk9iamVjdElEIicKBVJhbmdlEg4KBm9mZnNldBgBIAEo",
            "BBIOCgZsZW5ndGgYAiABKAQirgIKD0dldFJhbmdlUmVxdWVzdBI0CgRib2R5",
            "GAEgASgLMiYubmVvLmZzLnYyLm9iamVjdC5HZXRSYW5nZVJlcXVlc3QuQm9k",
            "eRI5CgttZXRhX2hlYWRlchgCIAEoCzIkLm5lby5mcy52Mi5zZXNzaW9uLlJl",
            "cXVlc3RNZXRhSGVhZGVyEkMKDXZlcmlmeV9oZWFkZXIYAyABKAsyLC5uZW8u",
            "ZnMudjIuc2Vzc2lvbi5SZXF1ZXN0VmVyaWZpY2F0aW9uSGVhZGVyGmUKBEJv",
            "ZHkSKAoHYWRkcmVzcxgBIAEoCzIXLm5lby5mcy52Mi5yZWZzLkFkZHJlc3MS",
            "JgoFcmFuZ2UYAiABKAsyFy5uZW8uZnMudjIub2JqZWN0LlJhbmdlEgsKA3Jh",
            "dxgDIAEoCCKlAgoQR2V0UmFuZ2VSZXNwb25zZRI1CgRib2R5GAEgASgLMicu",
            "bmVvLmZzLnYyLm9iamVjdC5HZXRSYW5nZVJlc3BvbnNlLkJvZHkSOgoLbWV0",
            "YV9oZWFkZXIYAiABKAsyJS5uZW8uZnMudjIuc2Vzc2lvbi5SZXNwb25zZU1l",
            "dGFIZWFkZXISRAoNdmVyaWZ5X2hlYWRlchgDIAEoCzItLm5lby5mcy52Mi5z",
            "ZXNzaW9uLlJlc3BvbnNlVmVyaWZpY2F0aW9uSGVhZGVyGlgKBEJvZHkSDwoF",
            "Y2h1bmsYASABKAxIABIxCgpzcGxpdF9pbmZvGAIgASgLMhsubmVvLmZzLnYy",
            "Lm9iamVjdC5TcGxpdEluZm9IAEIMCgpyYW5nZV9wYXJ0IuUCChNHZXRSYW5n",
            "ZUhhc2hSZXF1ZXN0EjgKBGJvZHkYASABKAsyKi5uZW8uZnMudjIub2JqZWN0",
            "LkdldFJhbmdlSGFzaFJlcXVlc3QuQm9keRI5CgttZXRhX2hlYWRlchgCIAEo",
            "CzIkLm5lby5mcy52Mi5zZXNzaW9uLlJlcXVlc3RNZXRhSGVhZGVyEkMKDXZl",
            "cmlmeV9oZWFkZXIYAyABKAsyLC5uZW8uZnMudjIuc2Vzc2lvbi5SZXF1ZXN0",
            "VmVyaWZpY2F0aW9uSGVhZGVyGpMBCgRCb2R5EigKB2FkZHJlc3MYASABKAsy",
            "Fy5uZW8uZnMudjIucmVmcy5BZGRyZXNzEicKBnJhbmdlcxgCIAMoCzIXLm5l",
            "by5mcy52Mi5vYmplY3QuUmFuZ2USDAoEc2FsdBgDIAEoDBIqCgR0eXBlGAQg",
            "ASgOMhwubmVvLmZzLnYyLnJlZnMuQ2hlY2tzdW1UeXBlIpoCChRHZXRSYW5n",
            "ZUhhc2hSZXNwb25zZRI5CgRib2R5GAEgASgLMisubmVvLmZzLnYyLm9iamVj",
            "dC5HZXRSYW5nZUhhc2hSZXNwb25zZS5Cb2R5EjoKC21ldGFfaGVhZGVyGAIg",
            "ASgLMiUubmVvLmZzLnYyLnNlc3Npb24uUmVzcG9uc2VNZXRhSGVhZGVyEkQK",
            "DXZlcmlmeV9oZWFkZXIYAyABKAsyLS5uZW8uZnMudjIuc2Vzc2lvbi5SZXNw",
            "b25zZVZlcmlmaWNhdGlvbkhlYWRlchpFCgRCb2R5EioKBHR5cGUYASABKA4y",
            "HC5uZW8uZnMudjIucmVmcy5DaGVja3N1bVR5cGUSEQoJaGFzaF9saXN0GAIg",
            "AygMMrIECg1PYmplY3RTZXJ2aWNlEkQKA0dldBIcLm5lby5mcy52Mi5vYmpl",
            "Y3QuR2V0UmVxdWVzdBodLm5lby5mcy52Mi5vYmplY3QuR2V0UmVzcG9uc2Uw",
            "ARJECgNQdXQSHC5uZW8uZnMudjIub2JqZWN0LlB1dFJlcXVlc3QaHS5uZW8u",
            "ZnMudjIub2JqZWN0LlB1dFJlc3BvbnNlKAESSwoGRGVsZXRlEh8ubmVvLmZz",
            "LnYyLm9iamVjdC5EZWxldGVSZXF1ZXN0GiAubmVvLmZzLnYyLm9iamVjdC5E",
            "ZWxldGVSZXNwb25zZRJFCgRIZWFkEh0ubmVvLmZzLnYyLm9iamVjdC5IZWFk",
            "UmVxdWVzdBoeLm5lby5mcy52Mi5vYmplY3QuSGVhZFJlc3BvbnNlEk0KBlNl",
            "YXJjaBIfLm5lby5mcy52Mi5vYmplY3QuU2VhcmNoUmVxdWVzdBogLm5lby5m",
            "cy52Mi5vYmplY3QuU2VhcmNoUmVzcG9uc2UwARJTCghHZXRSYW5nZRIhLm5l",
            "by5mcy52Mi5vYmplY3QuR2V0UmFuZ2VSZXF1ZXN0GiIubmVvLmZzLnYyLm9i",
            "amVjdC5HZXRSYW5nZVJlc3BvbnNlMAESXQoMR2V0UmFuZ2VIYXNoEiUubmVv",
            "LmZzLnYyLm9iamVjdC5HZXRSYW5nZUhhc2hSZXF1ZXN0GiYubmVvLmZzLnYy",
            "Lm9iamVjdC5HZXRSYW5nZUhhc2hSZXNwb25zZUJPWjdnaXRodWIuY29tL25z",
            "cGNjLWRldi9uZW9mcy1hcGktZ28vdjIvb2JqZWN0L2dycGM7b2JqZWN0qgIT",
            "TmVvRlMuQVBJLnYyLk9iamVjdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::EpicChainAPI.v2.Object.TypesReflection.Descriptor, global::EpicChainAPI.v2.Refs.TypesReflection.Descriptor, global::EpicChainAPI.v2.Session.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRequest), global::EpicChainAPI.v2.Object.GetRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRequest.Types.Body), global::EpicChainAPI.v2.Object.GetRequest.Types.Body.Parser, new[]{ "Address", "Raw" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetResponse), global::EpicChainAPI.v2.Object.GetResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetResponse.Types.Body), global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Parser, new[]{ "Init", "Chunk", "SplitInfo" }, new[]{ "ObjectPart" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init), global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init.Parser, new[]{ "ObjectId", "Signature", "Header" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.PutRequest), global::EpicChainAPI.v2.Object.PutRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.PutRequest.Types.Body), global::EpicChainAPI.v2.Object.PutRequest.Types.Body.Parser, new[]{ "Init", "Chunk" }, new[]{ "ObjectPart" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.PutRequest.Types.Body.Types.Init), global::EpicChainAPI.v2.Object.PutRequest.Types.Body.Types.Init.Parser, new[]{ "ObjectId", "Signature", "Header", "CopiesNumber" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.PutResponse), global::EpicChainAPI.v2.Object.PutResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.PutResponse.Types.Body), global::EpicChainAPI.v2.Object.PutResponse.Types.Body.Parser, new[]{ "ObjectId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.DeleteRequest), global::EpicChainAPI.v2.Object.DeleteRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.DeleteRequest.Types.Body), global::EpicChainAPI.v2.Object.DeleteRequest.Types.Body.Parser, new[]{ "Address" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.DeleteResponse), global::EpicChainAPI.v2.Object.DeleteResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.DeleteResponse.Types.Body), global::EpicChainAPI.v2.Object.DeleteResponse.Types.Body.Parser, new[]{ "Tombstone" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.HeadRequest), global::EpicChainAPI.v2.Object.HeadRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.HeadRequest.Types.Body), global::EpicChainAPI.v2.Object.HeadRequest.Types.Body.Parser, new[]{ "Address", "MainOnly", "Raw" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.HeaderWithSignature), global::EpicChainAPI.v2.Object.HeaderWithSignature.Parser, new[]{ "Header", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.HeadResponse), global::EpicChainAPI.v2.Object.HeadResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.HeadResponse.Types.Body), global::EpicChainAPI.v2.Object.HeadResponse.Types.Body.Parser, new[]{ "Header", "ShortHeader", "SplitInfo" }, new[]{ "Head" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.SearchRequest), global::EpicChainAPI.v2.Object.SearchRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.SearchRequest.Types.Body), global::EpicChainAPI.v2.Object.SearchRequest.Types.Body.Parser, new[]{ "ContainerId", "Version", "Filters" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.SearchRequest.Types.Body.Types.Filter), global::EpicChainAPI.v2.Object.SearchRequest.Types.Body.Types.Filter.Parser, new[]{ "MatchType", "Key", "Value" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.SearchResponse), global::EpicChainAPI.v2.Object.SearchResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.SearchResponse.Types.Body), global::EpicChainAPI.v2.Object.SearchResponse.Types.Body.Parser, new[]{ "IdList" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.Range), global::EpicChainAPI.v2.Object.Range.Parser, new[]{ "Offset", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeRequest), global::EpicChainAPI.v2.Object.GetRangeRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeRequest.Types.Body), global::EpicChainAPI.v2.Object.GetRangeRequest.Types.Body.Parser, new[]{ "Address", "Range", "Raw" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeResponse), global::EpicChainAPI.v2.Object.GetRangeResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeResponse.Types.Body), global::EpicChainAPI.v2.Object.GetRangeResponse.Types.Body.Parser, new[]{ "Chunk", "SplitInfo" }, new[]{ "RangePart" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeHashRequest), global::EpicChainAPI.v2.Object.GetRangeHashRequest.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeHashRequest.Types.Body), global::EpicChainAPI.v2.Object.GetRangeHashRequest.Types.Body.Parser, new[]{ "Address", "Ranges", "Salt", "Type" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeHashResponse), global::EpicChainAPI.v2.Object.GetRangeHashResponse.Parser, new[]{ "Body", "MetaHeader", "VerifyHeader" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::EpicChainAPI.v2.Object.GetRangeHashResponse.Types.Body), global::EpicChainAPI.v2.Object.GetRangeHashResponse.Types.Body.Parser, new[]{ "Type", "HashList" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// GET object request
  /// </summary>
  public sealed partial class GetRequest : pb::IMessage<GetRequest> {
    private static readonly pb::MessageParser<GetRequest> _parser = new pb::MessageParser<GetRequest>(() => new GetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EpicChainAPI.v2.Object.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest(GetRequest other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      metaHeader_ = other.metaHeader_ != null ? other.metaHeader_.Clone() : null;
      verifyHeader_ = other.verifyHeader_ != null ? other.verifyHeader_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest Clone() {
      return new GetRequest(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::EpicChainAPI.v2.Object.GetRequest.Types.Body body_;
    /// <summary>
    /// Body of get object request message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Object.GetRequest.Types.Body Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "meta_header" field.</summary>
    public const int MetaHeaderFieldNumber = 2;
    private global::EpicChainAPI.v2.Session.RequestMetaHeader metaHeader_;
    /// <summary>
    /// Carries request meta information. Header data is used only to regulate
    /// message transport and does not affect request execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Session.RequestMetaHeader MetaHeader {
      get { return metaHeader_; }
      set {
        metaHeader_ = value;
      }
    }

    /// <summary>Field number for the "verify_header" field.</summary>
    public const int VerifyHeaderFieldNumber = 3;
    private global::EpicChainAPI.v2.Session.RequestVerificationHeader verifyHeader_;
    /// <summary>
    /// Carries request verification information. This header is used to
    /// authenticate the nodes of the message route and check the correctness of
    /// transmission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Session.RequestVerificationHeader VerifyHeader {
      get { return verifyHeader_; }
      set {
        verifyHeader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(MetaHeader, other.MetaHeader)) return false;
      if (!object.Equals(VerifyHeader, other.VerifyHeader)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      if (metaHeader_ != null) hash ^= MetaHeader.GetHashCode();
      if (verifyHeader_ != null) hash ^= VerifyHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (metaHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaHeader);
      }
      if (verifyHeader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VerifyHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (metaHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaHeader);
      }
      if (verifyHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRequest other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::EpicChainAPI.v2.Object.GetRequest.Types.Body();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.metaHeader_ != null) {
        if (metaHeader_ == null) {
          MetaHeader = new global::EpicChainAPI.v2.Session.RequestMetaHeader();
        }
        MetaHeader.MergeFrom(other.MetaHeader);
      }
      if (other.verifyHeader_ != null) {
        if (verifyHeader_ == null) {
          VerifyHeader = new global::EpicChainAPI.v2.Session.RequestVerificationHeader();
        }
        VerifyHeader.MergeFrom(other.VerifyHeader);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::EpicChainAPI.v2.Object.GetRequest.Types.Body();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (metaHeader_ == null) {
              MetaHeader = new global::EpicChainAPI.v2.Session.RequestMetaHeader();
            }
            input.ReadMessage(MetaHeader);
            break;
          }
          case 26: {
            if (verifyHeader_ == null) {
              VerifyHeader = new global::EpicChainAPI.v2.Session.RequestVerificationHeader();
            }
            input.ReadMessage(VerifyHeader);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// GET Object request body
      /// </summary>
      public sealed partial class Body : pb::IMessage<Body> {
        private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Body> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EpicChainAPI.v2.Object.GetRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body(Body other) : this() {
          address_ = other.address_ != null ? other.address_.Clone() : null;
          raw_ = other.raw_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body Clone() {
          return new Body(this);
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 1;
        private global::EpicChainAPI.v2.Refs.Address address_;
        /// <summary>
        /// Address of the requested object
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EpicChainAPI.v2.Refs.Address Address {
          get { return address_; }
          set {
            address_ = value;
          }
        }

        /// <summary>Field number for the "raw" field.</summary>
        public const int RawFieldNumber = 2;
        private bool raw_;
        /// <summary>
        /// If `raw` flag is set, request will work only with objects that are
        /// physically stored on the peer node
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Raw {
          get { return raw_; }
          set {
            raw_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Body);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Body other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Address, other.Address)) return false;
          if (Raw != other.Raw) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (address_ != null) hash ^= Address.GetHashCode();
          if (Raw != false) hash ^= Raw.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (address_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Address);
          }
          if (Raw != false) {
            output.WriteRawTag(16);
            output.WriteBool(Raw);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (address_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
          }
          if (Raw != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Body other) {
          if (other == null) {
            return;
          }
          if (other.address_ != null) {
            if (address_ == null) {
              Address = new global::EpicChainAPI.v2.Refs.Address();
            }
            Address.MergeFrom(other.Address);
          }
          if (other.Raw != false) {
            Raw = other.Raw;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (address_ == null) {
                  Address = new global::EpicChainAPI.v2.Refs.Address();
                }
                input.ReadMessage(Address);
                break;
              }
              case 16: {
                Raw = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// GET object response
  /// </summary>
  public sealed partial class GetResponse : pb::IMessage<GetResponse> {
    private static readonly pb::MessageParser<GetResponse> _parser = new pb::MessageParser<GetResponse>(() => new GetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EpicChainAPI.v2.Object.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse(GetResponse other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      metaHeader_ = other.metaHeader_ != null ? other.metaHeader_.Clone() : null;
      verifyHeader_ = other.verifyHeader_ != null ? other.verifyHeader_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse Clone() {
      return new GetResponse(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::EpicChainAPI.v2.Object.GetResponse.Types.Body body_;
    /// <summary>
    /// Body of get object response message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Object.GetResponse.Types.Body Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "meta_header" field.</summary>
    public const int MetaHeaderFieldNumber = 2;
    private global::EpicChainAPI.v2.Session.ResponseMetaHeader metaHeader_;
    /// <summary>
    /// Carries response meta information. Header data is used only to regulate
    /// message transport and does not affect request execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Session.ResponseMetaHeader MetaHeader {
      get { return metaHeader_; }
      set {
        metaHeader_ = value;
      }
    }

    /// <summary>Field number for the "verify_header" field.</summary>
    public const int VerifyHeaderFieldNumber = 3;
    private global::EpicChainAPI.v2.Session.ResponseVerificationHeader verifyHeader_;
    /// <summary>
    /// Carries response verification information. This header is used to
    /// authenticate the nodes of the message route and check the correctness of
    /// transmission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Session.ResponseVerificationHeader VerifyHeader {
      get { return verifyHeader_; }
      set {
        verifyHeader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(MetaHeader, other.MetaHeader)) return false;
      if (!object.Equals(VerifyHeader, other.VerifyHeader)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      if (metaHeader_ != null) hash ^= MetaHeader.GetHashCode();
      if (verifyHeader_ != null) hash ^= VerifyHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (metaHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaHeader);
      }
      if (verifyHeader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VerifyHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (metaHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaHeader);
      }
      if (verifyHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResponse other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::EpicChainAPI.v2.Object.GetResponse.Types.Body();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.metaHeader_ != null) {
        if (metaHeader_ == null) {
          MetaHeader = new global::EpicChainAPI.v2.Session.ResponseMetaHeader();
        }
        MetaHeader.MergeFrom(other.MetaHeader);
      }
      if (other.verifyHeader_ != null) {
        if (verifyHeader_ == null) {
          VerifyHeader = new global::EpicChainAPI.v2.Session.ResponseVerificationHeader();
        }
        VerifyHeader.MergeFrom(other.VerifyHeader);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::EpicChainAPI.v2.Object.GetResponse.Types.Body();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (metaHeader_ == null) {
              MetaHeader = new global::EpicChainAPI.v2.Session.ResponseMetaHeader();
            }
            input.ReadMessage(MetaHeader);
            break;
          }
          case 26: {
            if (verifyHeader_ == null) {
              VerifyHeader = new global::EpicChainAPI.v2.Session.ResponseVerificationHeader();
            }
            input.ReadMessage(VerifyHeader);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// GET Object Response body
      /// </summary>
      public sealed partial class Body : pb::IMessage<Body> {
        private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Body> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::EpicChainAPI.v2.Object.GetResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body(Body other) : this() {
          switch (other.ObjectPartCase) {
            case ObjectPartOneofCase.Init:
              Init = other.Init.Clone();
              break;
            case ObjectPartOneofCase.Chunk:
              Chunk = other.Chunk;
              break;
            case ObjectPartOneofCase.SplitInfo:
              SplitInfo = other.SplitInfo.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Body Clone() {
          return new Body(this);
        }

        /// <summary>Field number for the "init" field.</summary>
        public const int InitFieldNumber = 1;
        /// <summary>
        /// Initial part of the object stream
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init Init {
          get { return objectPartCase_ == ObjectPartOneofCase.Init ? (global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init) objectPart_ : null; }
          set {
            objectPart_ = value;
            objectPartCase_ = value == null ? ObjectPartOneofCase.None : ObjectPartOneofCase.Init;
          }
        }

        /// <summary>Field number for the "chunk" field.</summary>
        public const int ChunkFieldNumber = 2;
        /// <summary>
        /// Chunked object payload
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Chunk {
          get { return objectPartCase_ == ObjectPartOneofCase.Chunk ? (pb::ByteString) objectPart_ : pb::ByteString.Empty; }
          set {
            objectPart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            objectPartCase_ = ObjectPartOneofCase.Chunk;
          }
        }

        /// <summary>Field number for the "split_info" field.</summary>
        public const int SplitInfoFieldNumber = 3;
        /// <summary>
        /// Meta information of split hierarchy for object assembly.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::EpicChainAPI.v2.Object.SplitInfo SplitInfo {
          get { return objectPartCase_ == ObjectPartOneofCase.SplitInfo ? (global::EpicChainAPI.v2.Object.SplitInfo) objectPart_ : null; }
          set {
            objectPart_ = value;
            objectPartCase_ = value == null ? ObjectPartOneofCase.None : ObjectPartOneofCase.SplitInfo;
          }
        }

        private object objectPart_;
        /// <summary>Enum of possible cases for the "object_part" oneof.</summary>
        public enum ObjectPartOneofCase {
          None = 0,
          Init = 1,
          Chunk = 2,
          SplitInfo = 3,
        }
        private ObjectPartOneofCase objectPartCase_ = ObjectPartOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ObjectPartOneofCase ObjectPartCase {
          get { return objectPartCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearObjectPart() {
          objectPartCase_ = ObjectPartOneofCase.None;
          objectPart_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Body);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Body other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Init, other.Init)) return false;
          if (Chunk != other.Chunk) return false;
          if (!object.Equals(SplitInfo, other.SplitInfo)) return false;
          if (ObjectPartCase != other.ObjectPartCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (objectPartCase_ == ObjectPartOneofCase.Init) hash ^= Init.GetHashCode();
          if (objectPartCase_ == ObjectPartOneofCase.Chunk) hash ^= Chunk.GetHashCode();
          if (objectPartCase_ == ObjectPartOneofCase.SplitInfo) hash ^= SplitInfo.GetHashCode();
          hash ^= (int) objectPartCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (objectPartCase_ == ObjectPartOneofCase.Init) {
            output.WriteRawTag(10);
            output.WriteMessage(Init);
          }
          if (objectPartCase_ == ObjectPartOneofCase.Chunk) {
            output.WriteRawTag(18);
            output.WriteBytes(Chunk);
          }
          if (objectPartCase_ == ObjectPartOneofCase.SplitInfo) {
            output.WriteRawTag(26);
            output.WriteMessage(SplitInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (objectPartCase_ == ObjectPartOneofCase.Init) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Init);
          }
          if (objectPartCase_ == ObjectPartOneofCase.Chunk) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Chunk);
          }
          if (objectPartCase_ == ObjectPartOneofCase.SplitInfo) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SplitInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Body other) {
          if (other == null) {
            return;
          }
          switch (other.ObjectPartCase) {
            case ObjectPartOneofCase.Init:
              if (Init == null) {
                Init = new global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init();
              }
              Init.MergeFrom(other.Init);
              break;
            case ObjectPartOneofCase.Chunk:
              Chunk = other.Chunk;
              break;
            case ObjectPartOneofCase.SplitInfo:
              if (SplitInfo == null) {
                SplitInfo = new global::EpicChainAPI.v2.Object.SplitInfo();
              }
              SplitInfo.MergeFrom(other.SplitInfo);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init subBuilder = new global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Types.Init();
                if (objectPartCase_ == ObjectPartOneofCase.Init) {
                  subBuilder.MergeFrom(Init);
                }
                input.ReadMessage(subBuilder);
                Init = subBuilder;
                break;
              }
              case 18: {
                Chunk = input.ReadBytes();
                break;
              }
              case 26: {
                global::EpicChainAPI.v2.Object.SplitInfo subBuilder = new global::EpicChainAPI.v2.Object.SplitInfo();
                if (objectPartCase_ == ObjectPartOneofCase.SplitInfo) {
                  subBuilder.MergeFrom(SplitInfo);
                }
                input.ReadMessage(subBuilder);
                SplitInfo = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Body message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Initial part of the `Object` structure stream. Technically it's a
          /// set of all `Object` structure's fields except `payload`.
          /// </summary>
          public sealed partial class Init : pb::IMessage<Init> {
            private static readonly pb::MessageParser<Init> _parser = new pb::MessageParser<Init>(() => new Init());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Init> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::EpicChainAPI.v2.Object.GetResponse.Types.Body.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Init() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Init(Init other) : this() {
              objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
              signature_ = other.signature_ != null ? other.signature_.Clone() : null;
              header_ = other.header_ != null ? other.header_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Init Clone() {
              return new Init(this);
            }

            /// <summary>Field number for the "object_id" field.</summary>
            public const int ObjectIdFieldNumber = 1;
            private global::EpicChainAPI.v2.Refs.ObjectID objectId_;
            /// <summary>
            /// Object's unique identifier.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::EpicChainAPI.v2.Refs.ObjectID ObjectId {
              get { return objectId_; }
              set {
                objectId_ = value;
              }
            }

            /// <summary>Field number for the "signature" field.</summary>
            public const int SignatureFieldNumber = 2;
            private global::EpicChainAPI.v2.Refs.Signature signature_;
            /// <summary>
            /// Signed `ObjectID`
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::EpicChainAPI.v2.Refs.Signature Signature {
              get { return signature_; }
              set {
                signature_ = value;
              }
            }

            /// <summary>Field number for the "header" field.</summary>
            public const int HeaderFieldNumber = 3;
            private global::EpicChainAPI.v2.Object.Header header_;
            /// <summary>
            /// Object metadata headers
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::EpicChainAPI.v2.Object.Header Header {
              get { return header_; }
              set {
                header_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Init);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Init other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(ObjectId, other.ObjectId)) return false;
              if (!object.Equals(Signature, other.Signature)) return false;
              if (!object.Equals(Header, other.Header)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (objectId_ != null) hash ^= ObjectId.GetHashCode();
              if (signature_ != null) hash ^= Signature.GetHashCode();
              if (header_ != null) hash ^= Header.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (objectId_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(ObjectId);
              }
              if (signature_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Signature);
              }
              if (header_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Header);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (objectId_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
              }
              if (signature_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
              }
              if (header_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Init other) {
              if (other == null) {
                return;
              }
              if (other.objectId_ != null) {
                if (objectId_ == null) {
                  ObjectId = new global::EpicChainAPI.v2.Refs.ObjectID();
                }
                ObjectId.MergeFrom(other.ObjectId);
              }
              if (other.signature_ != null) {
                if (signature_ == null) {
                  Signature = new global::EpicChainAPI.v2.Refs.Signature();
                }
                Signature.MergeFrom(other.Signature);
              }
              if (other.header_ != null) {
                if (header_ == null) {
                  Header = new global::EpicChainAPI.v2.Object.Header();
                }
                Header.MergeFrom(other.Header);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (objectId_ == null) {
                      ObjectId = new global::EpicChainAPI.v2.Refs.ObjectID();
                    }
                    input.ReadMessage(ObjectId);
                    break;
                  }
                  case 18: {
                    if (signature_ == null) {
                      Signature = new global::EpicChainAPI.v2.Refs.Signature();
                    }
                    input.ReadMessage(Signature);
                    break;
                  }
                  case 26: {
                    if (header_ == null) {
                      Header = new global::EpicChainAPI.v2.Object.Header();
                    }
                    input.ReadMessage(Header);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// PUT object request
  /// </summary>
  public sealed partial class PutRequest : pb::IMessage<PutRequest> {
    private static readonly pb::MessageParser<PutRequest> _parser = new pb::MessageParser<PutRequest>(() => new PutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EpicChainAPI.v2.Object.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest(PutRequest other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      metaHeader_ = other.metaHeader_ != null ? other.metaHeader_.Clone() : null;
      verifyHeader_ = other.verifyHeader_ != null ? other.verifyHeader_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest Clone() {
      return new PutRequest(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::EpicChainAPI.v2.Object.PutRequest.Types.Body body_;
    /// <summary>
    /// Body of put object request message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Object.PutRequest.Types.Body Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "meta_header" field.</summary>
    public const int MetaHeaderFieldNumber = 2;
    private global::EpicChainAPI.v2.Session.RequestMetaHeader metaHeader_;
    /// <summary>
    /// Carries request meta information. Header data is used only to regulate
    /// message transport and does not affect request execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Session.RequestMetaHeader MetaHeader {
      get { return metaHeader_; }
      set {
        metaHeader_ = value;
      }
    }

    /// <summary>Field number for the "verify_header" field.</summary>
    public const int VerifyHeaderFieldNumber = 3;
    private global::EpicChainAPI.v2.Session.RequestVerificationHeader verifyHeader_;
    /// <summary>
    /// Carries request verification information. This header is used to
    /// authenticate the nodes of the message route and check the correctness of
    /// transmission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::EpicChainAPI.v2.Session.RequestVerificationHeader VerifyHeader {
      get { return verifyHeader_; }
      set {
        verifyHeader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(MetaHeader, other.MetaHeader)) return false;
      if (!object.Equals(VerifyHeader, other.VerifyHeader)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      if (metaHeader_ != null) hash ^= MetaHeader.GetHashCode();
      if (verifyHeader_ != null) hash ^= VerifyHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (metaHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaHeader);
      }
      if (verifyHeader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VerifyHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (metaHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaHeader);
      }
      if (verifyHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRequest other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::